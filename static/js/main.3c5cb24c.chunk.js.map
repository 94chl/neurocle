{"version":3,"sources":["store/canvas/canvas.js","hook/useLocalStorage.js","component/Canvas/Canvas.jsx","component/Tool/Tool.jsx","component/Button/Button.jsx","component/CustomInput/CustomInput.js","App.jsx","reportWebVitals.js","store/index.js","index.js","component/Tool/Tool.module.scss","component/Button/Button.module.scss","component/Canvas/Canvas.module.scss","App.module.scss","component/CustomInput/CustomInput.module.scss"],"names":["canvas","createSlice","name","initialState","shapeType","strokeColor","strokeWidth","fillColor","fillColorTransparency","shapes","layersHistory","layersNow","layersHistoryLimit","reducers","seShapeType","state","_ref","payload","setColor","_ref2","target","value","setFillColorTransparency","setStrokeWidth","_ref3","setShapes","_ref4","setLayersHitory","_ref5","setLayersNow","_ref6","useLocalStorage","key","initialValue","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","storedValue","setStoredValue","valueToStore","setItem","stringify","container","styles","stage","Canvas","width","height","canvasContainer","setCanvasContainer","canvasRef","useRef","useEffect","current","clientWidth","clientHeight","canvasResize","window","addEventListener","removeEventListener","dispatch","useDispatch","_useSelector","useSelector","store","_useLocalStorage","_useLocalStorage2","storedLayersHistory","setStoredLayersHistory","_useLocalStorage3","_useLocalStorage4","storedLayersNow","setStoredLayersNow","length","actions","_useState3","_useState4","shapePoints","setShapePoints","_useState5","type","x","y","points","_useState6","shape","setShape","isDrawing","isStitching","includes","onSetPoint","e","concat","_toConsumableArray","pageX","pageY","initializeShape","finishAdjustShape","isReset","newShapes","newLayersHistory","filter","_","index","newShape","_objectSpread","slice","push","nextIndex","_jsx","className","classNames","ref","onMouseDown","button","onMouseUp","onClick","onMouseMove","Math","abs","onAdjustShape","onDoubleClick","onKeyDown","tabIndex","children","Stage","_jsxs","Layer","map","Line","stroke","tension","Ellipse","fill","Rect","closed","shapeButtonBox","customInputBox","controlButtonBox","guideBox","Tool","setShapeButton","onChangeColor","Button","Error","console","error","isActive","CustomInput","inputId","onChange","inputOption","parseInt","onChangeStrokeWidth","min","max","checked","prevIndex","isDisable","clearShapes","confirm","active","disable","_classNames","style","_defineProperty","disabled","Input","htmlFor","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","Sentry","dsn","integrations","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","ReactDOM","render","React","StrictMode","Provider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3c5cb24c.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const canvas = createSlice({\n  name: \"canvas\",\n  initialState: {\n    shapeType: \"rect\",\n    strokeColor: \"#000000\",\n    strokeWidth: 5,\n    fillColor: \"#000000\",\n    fillColorTransparency: true,\n    shapes: [],\n    layersHistory: [],\n    layersNow: -1,\n    layersHistoryLimit: 40,\n  },\n  reducers: {\n    seShapeType: (state, { payload }) => {\n      state.shapeType = payload;\n    },\n    setColor: (state, { payload }) => {\n      state[payload.target] = payload.value;\n    },\n    setFillColorTransparency: (state) => {\n      state.fillColorTransparency = !state.fillColorTransparency;\n    },\n    setStrokeWidth: (state, { payload }) => {\n      state.strokeWidth = payload;\n    },\n    setShapes: (state, { payload }) => {\n      state.shapes = payload;\n    },\n    setLayersHitory: (state, { payload }) => {\n      state.layersHistory = payload;\n    },\n    setLayersNow: (state, { payload }) => {\n      state.layersNow = payload;\n    },\n  },\n});\n","import { useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    const value = JSON.parse(localStorage.getItem(key));\n    return !value ? initialValue : value;\n  });\n\n  const setValue = (value) => {\n    const valueToStore =\n      typeof value === \"function\" ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    localStorage.setItem(key, JSON.stringify(valueToStore));\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n","/* eslint-disable array-callback-return */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Canvas.module.scss\";\nimport { Stage, Layer, Rect, Ellipse, Line } from \"react-konva\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { canvas } from \"@/store/canvas/canvas\";\nimport { useLocalStorage } from \"@/hook\";\n\nconst { container, stage } = styles;\n\nconst Canvas = () => {\n  const [canvasContainer, setCanvasContainer] = useState({\n    width: 0,\n    height: 0,\n  });\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      setCanvasContainer({\n        width: canvasRef.current.clientWidth,\n        height: canvasRef.current.clientHeight,\n      });\n    }\n\n    const canvasResize = () => {\n      setCanvasContainer({\n        width: canvasRef.current.clientWidth,\n        height: canvasRef.current.clientHeight,\n      });\n    };\n\n    window.addEventListener(\"resize\", canvasResize);\n    return () => window.removeEventListener(\"resize\", canvasResize);\n  }, []);\n\n  const dispatch = useDispatch();\n  const {\n    shapes,\n    shapeType,\n    strokeColor,\n    strokeWidth,\n    fillColor,\n    fillColorTransparency,\n    layersHistory,\n    layersNow,\n    layersHistoryLimit,\n  } = useSelector((store) => store.canvas);\n\n  const [storedLayersHistory, setStoredLayersHistory] = useLocalStorage(\n    \"storedLayersHistory\",\n    []\n  );\n  const [storedLayersNow, setStoredLayersNow] = useLocalStorage(\n    \"storedLayersNow\",\n    -1\n  );\n\n  useEffect(() => {\n    if (storedLayersHistory[storedLayersNow] < 0)\n      setStoredLayersNow(storedLayersHistory.length - 1);\n\n    if (!layersHistory.length && storedLayersHistory.length) {\n      dispatch(canvas.actions.setLayersHitory(storedLayersHistory));\n      dispatch(canvas.actions.setLayersNow(storedLayersNow));\n      dispatch(\n        canvas.actions.setShapes(\n          !storedLayersHistory[storedLayersNow]\n            ? []\n            : storedLayersHistory[storedLayersNow]\n        )\n      );\n    }\n  }, []);\n\n  const [shapePoints, setShapePoints] = useState([]);\n  const [shape, setShape] = useState({\n    type: shapeType,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    points: [],\n    strokeColor,\n    strokeWidth,\n    fillColor,\n    fillColorTransparency,\n  });\n\n  const isDrawing = useRef(false);\n  const isStitching = useRef(false);\n\n  useEffect(() => {\n    isStitching.current = [\"spline\", \"polygon\"].includes(shapeType)\n      ? true\n      : false;\n  }, [shapeType]);\n\n  const onSetPoint = (e) => {\n    setShapePoints([...shapePoints, e.pageX, e.pageY]);\n    isDrawing.current = true;\n  };\n\n  const onAdjustShape = (e) => {\n    setShapePoints([\n      ...shapePoints.slice(\n        0,\n        shapePoints.length > 2 ? shapePoints.length - 2 : 2\n      ),\n      e.pageX,\n      e.pageY,\n    ]);\n\n    const width = shapePoints[0] - shapePoints[shapePoints.length - 2];\n    const height = shapePoints[1] - shapePoints[shapePoints.length - 1];\n    const x = width < 0 ? shapePoints[0] : shapePoints[shapePoints.length - 2];\n    const y = height < 0 ? shapePoints[1] : shapePoints[shapePoints.length - 1];\n\n    const newShape = {\n      type: shapeType,\n      x: shapeType === \"ellipse\" ? x + Math.abs(width) / 2 : x,\n      y: shapeType === \"ellipse\" ? y + Math.abs(height) / 2 : y,\n      width: Math.abs(width),\n      height: Math.abs(height),\n      points: [...shapePoints],\n      strokeColor,\n      strokeWidth,\n      fillColor,\n      fillColorTransparency,\n    };\n\n    setShape(newShape);\n  };\n\n  const initializeShape = () => {\n    setShape({\n      type: shapeType,\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      points: [],\n      strokeColor,\n      strokeWidth,\n      fillColor,\n      fillColorTransparency,\n    });\n    setShapePoints([]);\n    isDrawing.current = !isDrawing.current;\n  };\n\n  const finishAdjustShape = (isReset) => {\n    if (isReset && !isStitching.current) {\n      initializeShape();\n      return;\n    }\n\n    const newShapes = [...shapes];\n    const newLayersHistory =\n      layersNow < layersHistoryLimit - 1\n        ? layersHistory.filter((_, index) => index <= layersNow)\n        : layersHistory.filter(\n            (_, index) =>\n              layersHistory.length - layersHistoryLimit + 1 <= index &&\n              index < layersHistoryLimit\n          );\n    if (isReset && isStitching.current) {\n      const newShape = {\n        ...shape,\n        points: shapePoints.slice(0, shapePoints.length - 2),\n      };\n      newShapes.push(newShape);\n    } else {\n      newShapes.push(shape);\n    }\n\n    dispatch(canvas.actions.setShapes(newShapes));\n\n    newLayersHistory.push(newShapes);\n    setStoredLayersHistory(newLayersHistory);\n    dispatch(canvas.actions.setLayersHitory(newLayersHistory));\n\n    const nextIndex =\n      layersNow + 1 < layersHistoryLimit - 1\n        ? layersNow + 1\n        : layersHistoryLimit - 1;\n    setStoredLayersNow(nextIndex);\n    dispatch(canvas.actions.setLayersNow(nextIndex));\n\n    initializeShape();\n  };\n\n  return (\n    <div\n      className={classNames(container)}\n      ref={canvasRef}\n      onMouseDown={(e) =>\n        e.button === 0 && !isStitching.current && onSetPoint(e)\n      }\n      onMouseUp={() => !isStitching.current && finishAdjustShape(false)}\n      onClick={(e) => isStitching.current && onSetPoint(e)}\n      onMouseMove={(e) => isDrawing.current && onAdjustShape(e)}\n      onDoubleClick={() => isStitching.current && finishAdjustShape(false)}\n      onKeyDown={(e) => e.key === \"Escape\" && finishAdjustShape(true)}\n      tabIndex=\"0\"\n    >\n      <Stage\n        className={classNames(stage)}\n        width={canvasContainer.width}\n        height={canvasContainer.height}\n      >\n        <Layer>\n          {shapes &&\n            shapes.map((shape, index) => {\n              if (shape?.type === \"line\") {\n                return (\n                  <Line\n                    stroke={shape.strokeColor}\n                    strokeWidth={shape.strokeWidth}\n                    points={shape.points}\n                    key={`${shape.type}-${index}`}\n                  ></Line>\n                );\n              }\n              if (shape?.type === \"spline\") {\n                return (\n                  <Line\n                    stroke={shape.strokeColor}\n                    strokeWidth={shape.strokeWidth}\n                    points={shape.points}\n                    tension={0.5}\n                    key={`${shape.type}-${index}`}\n                  ></Line>\n                );\n              }\n              if (shape?.type === \"ellipse\") {\n                return (\n                  <Ellipse\n                    fill={\n                      shape.fillColorTransparency\n                        ? \"transparent\"\n                        : shape.fillColor\n                    }\n                    stroke={shape.strokeColor}\n                    strokeWidth={shape.strokeWidth}\n                    x={shape.x}\n                    y={shape.y}\n                    width={shape.width}\n                    height={shape.height}\n                    key={`${shape.type}-${index}`}\n                  ></Ellipse>\n                );\n              }\n              if (shape?.type === \"rect\") {\n                return (\n                  <Rect\n                    fill={\n                      shape.fillColorTransparency\n                        ? \"transparent\"\n                        : shape.fillColor\n                    }\n                    stroke={shape.strokeColor}\n                    strokeWidth={shape.strokeWidth}\n                    x={shape.x}\n                    y={shape.y}\n                    width={shape.width}\n                    height={shape.height}\n                    key={`${shape.type}-${index}`}\n                  ></Rect>\n                );\n              }\n              if (shape?.type === \"polygon\") {\n                return (\n                  <Line\n                    fill={\n                      shape.fillColorTransparency\n                        ? \"transparent\"\n                        : shape.fillColor\n                    }\n                    stroke={shape.strokeColor}\n                    strokeWidth={shape.strokeWidth}\n                    points={shape.points}\n                    closed={true}\n                    key={`${shape.type}-${index}`}\n                  ></Line>\n                );\n              }\n            })}\n          {shapeType === \"line\" && (\n            <Line\n              stroke={strokeColor}\n              strokeWidth={strokeWidth}\n              points={shape.points}\n            ></Line>\n          )}\n          {shapeType === \"spline\" && (\n            <Line\n              stroke={strokeColor}\n              strokeWidth={strokeWidth}\n              points={shapePoints}\n              tension={0.5}\n            ></Line>\n          )}\n          {shapeType === \"ellipse\" && (\n            <Ellipse\n              fill={fillColorTransparency ? \"transparent\" : fillColor}\n              stroke={strokeColor}\n              strokeWidth={strokeWidth}\n              x={shape.x}\n              y={shape.y}\n              width={shape.width}\n              height={shape.height}\n            ></Ellipse>\n          )}\n          {shapeType === \"rect\" && (\n            <Rect\n              fill={fillColorTransparency ? \"transparent\" : fillColor}\n              stroke={strokeColor}\n              strokeWidth={strokeWidth}\n              x={shape.x}\n              y={shape.y}\n              width={shape.width}\n              height={shape.height}\n            ></Rect>\n          )}\n          {shapeType === \"polygon\" && (\n            <Line\n              fill={fillColorTransparency ? \"transparent\" : fillColor}\n              stroke={strokeColor}\n              strokeWidth={strokeWidth}\n              points={shapePoints}\n              closed={true}\n            ></Line>\n          )}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Canvas;\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Tool.module.scss\";\nimport { Button, CustomInput } from \"@/component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { canvas } from \"@/store/canvas/canvas\";\nimport { useLocalStorage } from \"@/hook\";\n\nconst {\n  container,\n  shapeButtonBox,\n  customInputBox,\n  controlButtonBox,\n  guideBox,\n} = styles;\n\nconst Tool = () => {\n  const dispatch = useDispatch();\n  const {\n    shapes,\n    shapeType,\n    strokeColor,\n    strokeWidth,\n    fillColor,\n    fillColorTransparency,\n    layersHistory,\n    layersNow,\n    layersHistoryLimit,\n  } = useSelector((store) => store.canvas);\n\n  const [storedLayersHistory, setStoredLayersHistory] = useLocalStorage(\n    \"storedLayersHistory\",\n    []\n  );\n  const [storedLayersNow, setStoredLayersNow] = useLocalStorage(\n    \"storedLayersNow\",\n    -1\n  );\n\n  const setShapeButton = (type) => {\n    dispatch(canvas.actions.seShapeType(type));\n  };\n\n  const onChangeColor = (e, target) => {\n    dispatch(canvas.actions.setColor({ target, value: e.target.value }));\n  };\n\n  const onChangeFillColorOpacity = () => {\n    dispatch(canvas.actions.setFillColorTransparency());\n  };\n\n  const onChangeStrokeWidth = (e) => {\n    const value = parseInt(e.target.value);\n    dispatch(\n      canvas.actions.setStrokeWidth(value > 50 ? 50 : value < 5 ? 5 : value)\n    );\n  };\n\n  const undo = () => {\n    const prevIndex =\n      layersNow >= 0\n        ? layersNow > layersHistory.length - 1\n          ? layersHistory.length - 1\n          : layersNow - 1\n        : -1;\n\n    setStoredLayersNow(prevIndex);\n    dispatch(canvas.actions.setLayersNow(prevIndex));\n    dispatch(\n      canvas.actions.setShapes(prevIndex > -1 ? layersHistory[prevIndex] : [])\n    );\n  };\n\n  const redo = () => {\n    const nextIndex =\n      layersNow < layersHistory.length - 1\n        ? layersNow + 1\n        : layersHistory.length - 1;\n\n    setStoredLayersNow(nextIndex);\n    dispatch(canvas.actions.setLayersNow(nextIndex));\n    dispatch(\n      canvas.actions.setShapes(nextIndex > -1 ? layersHistory[nextIndex] : [])\n    );\n  };\n\n  const clearShapes = () => {\n    const newLayersHistory = layersHistory.filter(\n      (_, index) => index <= layersNow\n    );\n    newLayersHistory.push([]);\n\n    dispatch(canvas.actions.setShapes([]));\n    dispatch(canvas.actions.setLayersHitory(newLayersHistory));\n    setStoredLayersHistory(newLayersHistory);\n\n    const nextIndex =\n      layersNow + 1 < layersHistoryLimit - 1\n        ? layersNow + 1\n        : layersHistoryLimit - 1;\n    dispatch(canvas.actions.setLayersNow(nextIndex));\n    setStoredLayersNow(nextIndex);\n  };\n\n  const resetLayers = () => {\n    if (window.confirm(\"초기화 하시겠습니까?\")) {\n      dispatch(canvas.actions.setShapes([]));\n      dispatch(canvas.actions.setLayersHitory([]));\n      setStoredLayersHistory([]);\n      dispatch(canvas.actions.setLayersNow(-1));\n      setStoredLayersNow(-1);\n    }\n  };\n\n  const throwError = () => {\n    try {\n      throw new Error(\"Sentry Test Error\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div className={classNames(container)}>\n      <Button onClick={throwError}>에러발생</Button>\n      <div className={classNames(shapeButtonBox)}>\n        <h3>드로잉 타입</h3>\n        <div>\n          <Button\n            onClick={() => setShapeButton(\"line\")}\n            isActive={shapeType === \"line\"}\n          >\n            직선\n          </Button>\n          <Button\n            onClick={() => setShapeButton(\"spline\")}\n            isActive={shapeType === \"spline\"}\n          >\n            곡선\n          </Button>\n          <Button\n            onClick={() => setShapeButton(\"ellipse\")}\n            isActive={shapeType === \"ellipse\"}\n          >\n            원\n          </Button>\n          <Button\n            onClick={() => setShapeButton(\"rect\")}\n            isActive={shapeType === \"rect\"}\n          >\n            직사각형\n          </Button>\n          <Button\n            onClick={() => setShapeButton(\"polygon\")}\n            isActive={shapeType === \"polygon\"}\n          >\n            다각형\n          </Button>\n        </div>\n      </div>\n      <div className={classNames(customInputBox)}>\n        <h3>드로잉 옵션</h3>\n        <div>\n          <CustomInput\n            inputId=\"strokeColor\"\n            onChange={(e) => onChangeColor(e, \"strokeColor\")}\n            value={strokeColor}\n            inputOption={{ type: \"color\" }}\n          >\n            테두리 색상\n          </CustomInput>\n          <CustomInput\n            inputId=\"strokeWidth\"\n            onChange={(e) => onChangeStrokeWidth(e)}\n            value={strokeWidth}\n            inputOption={{ type: \"number\", min: 5, max: 50 }}\n          >\n            테두리 두께\n          </CustomInput>\n          <CustomInput\n            inputId=\"fillColor\"\n            onChange={(e) => onChangeColor(e, \"fillColor\")}\n            value={fillColor}\n            inputOption={{ type: \"color\" }}\n          >\n            채우기 색상\n          </CustomInput>\n          <CustomInput\n            inputId=\"fillColorTransparency\"\n            onChange={onChangeFillColorOpacity}\n            value={0}\n            inputOption={{ type: \"checkbox\", checked: fillColorTransparency }}\n          >\n            채우기 없음\n          </CustomInput>\n        </div>\n      </div>\n      <div className={classNames(controlButtonBox)}>\n        <h3>편집</h3>\n        <div>\n          <Button onClick={undo} isActive={false} isDisable={layersNow < 0}>\n            undo\n          </Button>\n          <Button\n            onClick={redo}\n            isActive={false}\n            isDisable={layersNow >= layersHistory.length - 1}\n          >\n            redo\n          </Button>\n          <Button\n            onClick={() => shapes.length && clearShapes()}\n            isActive={false}\n            isDisable={!shapes.length}\n          >\n            clear\n          </Button>\n          <Button onClick={resetLayers} isActive={false}>\n            reset\n          </Button>\n        </div>\n      </div>\n      <div className={classNames(guideBox)}>\n        <h3>사용 정보</h3>\n        <ul>\n          <li>\n            <span>esc:</span>\n            <span>진행 중인 작업 취소</span>\n          </li>\n          <li>\n            <span>더블클릭:</span>\n            <span>진행 중인 작업(곡선, 다각형)을 해당 위치에서 완료</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Tool;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.scss\";\n\nconst { button, active, disable } = styles;\n\nconst Button = ({ onClick, isActive, isDisable, style, children }) => {\n  return (\n    <button\n      onClick={onClick}\n      className={classNames(button, {\n        [active]: isActive,\n        [disable]: isDisable,\n      })}\n      disabled={isDisable}\n      style={style}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./CustomInput.module.scss\";\n\nconst { container } = styles;\n\nconst Input = ({ style, inputOption, inputId, onChange, value, children }) => {\n  return (\n    <div className={classNames(container)} style={style}>\n      <label htmlFor={inputId}>{children}</label>\n      <input id={inputId} onChange={onChange} value={value} {...inputOption} />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./App.module.scss\";\nimport { Canvas, Tool } from \"@/component\";\n\nconst { container } = styles;\n\nfunction App() {\n  return (\n    <div className={classNames(container)}>\n      <Canvas></Canvas>\n      <Tool></Tool>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { canvas } from \"./canvas/canvas\";\n\nexport const store = configureStore({\n  reducer: {\n    canvas: canvas.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"@/store\";\nimport * as Sentry from \"@sentry/react\";\n\nSentry.init({\n  dsn: \"https://2b40a7e129417643627963bd11e55402@o4507158840999936.ingest.us.sentry.io/4507158845325312\",\n  integrations: [\n    Sentry.browserTracingIntegration(),\n    Sentry.replayIntegration(),\n  ],\n  // Performance Monitoring\n  tracesSampleRate: 1.0, //  Capture 100% of the transactions\n  // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n  tracePropagationTargets: [\"localhost\", /^https:\\/\\/yourserver\\.io\\/api/],\n  // Session Replay\n  replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n  replaysOnErrorSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tool_container__1Szw6\",\"shapeButtonBox\":\"Tool_shapeButtonBox__3ZrH2\",\"customInputBox\":\"Tool_customInputBox__5O10G\",\"controlButtonBox\":\"Tool_controlButtonBox__1dCPk\",\"guideBox\":\"Tool_guideBox__1njCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__17x3e\",\"active\":\"Button_active__15qMB\",\"disable\":\"Button_disable__M3pI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Canvas_container__1Vfbb\",\"stage\":\"Canvas_stage__35f8o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CustomInput_container__1QDtG\"};"],"sourceRoot":""}