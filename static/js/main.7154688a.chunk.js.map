{"version":3,"sources":["hook/useLocalStorage.js","component/Drawable/RectDrawable.tsx","component/Drawable/EllipseDrawable.tsx","component/Drawable/PolygonDrawable.tsx","component/Canvas/Canvas.jsx","component/Tool/Tool.jsx","component/Button/Button.jsx","component/CustomInput/CustomInput.js","App.jsx","reportWebVitals.js","store/index.js","index.js","store/canvas/canvas.js","const.ts","App.module.scss","component/Canvas/Canvas.module.scss","component/Tool/Tool.module.scss","component/Button/Button.module.scss","component/CustomInput/CustomInput.module.scss"],"names":["useLocalStorage","key","initialValue","storedValue","setStoredValue","useState","value","JSON","parse","localStorage","getItem","valueToStore","setItem","stringify","RectDrawable","_ref","color","x","y","width","height","_jsx","Rect","fill","Math","abs","opacity","EllipseDrawable","Ellipse","radiusX","radiusY","PolygonDrawable","points","Line","closed","container","stage","styles","Canvas","canvasContainer","setCanvasContainer","canvasRef","useRef","stageRef","useEffect","current","clientWidth","clientHeight","canvasResize","window","addEventListener","removeEventListener","dispatch","useDispatch","drawables","drawableType","fillColor","layersHistory","layersNow","layersHistoryLimit","useSelector","store","canvas","storedLayersHistory","setStoredLayersHistory","storedLayersNow","setStoredLayersNow","length","actions","setLayersHitory","setLayersNow","setDrawables","drawablePoints","setDrawablePoints","drawable","setDrawable","type","isDrawing","initializeDrawable","drawingDrawable","e","newDrawable","newDrawablePoints","slice","pageX","pageY","Drawables","map","index","console","log","toolEnum","ellipse","rect","polygon","DrawingDrawable","className","classNames","ref","onMouseMove","onMouseDown","onMouseUp","finishDrawingDrawable","select","selectDrawable","_stageRef$current","_stageRef$current2","pointerPosition","getPointerPosition","element","getIntersection","newDrawables","newLayersHistory","filter","_","push","nextIndex","onKeyDown","tabIndex","children","Stage","_jsxs","Layer","drawableButtonBox","customInputBox","controlButtonBox","guideBox","TOOL_TYPES","Object","values","Tool","Button","onClick","throwError","Error","error","Sentry","tooTypeValue","setDrawableButton","sedrawableType","isActive","CustomInput","inputId","onChange","onChangeColor","target","setColor","inputOption","undo","prevIndex","isDisable","redo","clearDrawables","resetLayers","confirm","button","active","disable","style","disabled","Input","htmlFor","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","dsn","integrations","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","rootEl","document","getElementById","root","createRoot","render","require","default","Provider","createSlice","name","initialState","reducers","state","payload","_ref2","_ref3","_ref4","_ref5","module","exports"],"mappings":"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","file":"static/js/main.7154688a.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    const value = JSON.parse(localStorage.getItem(key));\n    return !value ? initialValue : value;\n  });\n\n  const setValue = (value) => {\n    const valueToStore =\n      typeof value === \"function\" ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    localStorage.setItem(key, JSON.stringify(valueToStore));\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n","import React from \"react\";\nimport { Rect } from \"react-konva\";\n\ntype Props = {\n  color: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nconst RectDrawable: React.FC<React.PropsWithChildren<Props>> = ({\n  color,\n  x,\n  y,\n  width,\n  height,\n}) => {\n  return (\n    <Rect\n      fill={color}\n      x={x}\n      y={y}\n      width={Math.abs(width)}\n      height={Math.abs(height)}\n      opacity={0.3}\n    ></Rect>\n  );\n};\n\nexport default RectDrawable;\n","import React from \"react\";\nimport { Ellipse } from \"react-konva\";\n\ntype Props = {\n  color: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nconst EllipseDrawable: React.FC<React.PropsWithChildren<Props>> = ({\n  color,\n  x,\n  y,\n  width,\n  height,\n}) => {\n  return (\n    <Ellipse\n      radiusX={Math.abs(width) / 2}\n      radiusY={Math.abs(height) / 2}\n      fill={color}\n      x={x + Math.abs(width) / 2}\n      y={y + Math.abs(height) / 2}\n      width={Math.abs(width)}\n      height={Math.abs(height)}\n      opacity={0.3}\n    ></Ellipse>\n  );\n};\n\nexport default EllipseDrawable;\n","import React from \"react\";\nimport { Line } from \"react-konva\";\n\ntype Props = {\n  color: string;\n  points: number[];\n};\n\nconst PolygonDrawable: React.FC<React.PropsWithChildren<Props>> = ({\n  color,\n  points,\n}) => {\n  return <Line fill={color} points={points} closed={true} opacity={0.3}></Line>;\n};\n\nexport default PolygonDrawable;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Canvas.module.scss\";\nimport { Stage, Layer } from \"react-konva\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { canvas } from \"../../store/canvas/canvas\";\nimport { useLocalStorage } from \"../../hook\";\nimport { toolEnum } from \"../../const\";\nimport RectDrawable from \"../Drawable/RectDrawable\";\nimport EllipseDrawable from \"../Drawable/EllipseDrawable\";\nimport PolygonDrawable from \"../Drawable/PolygonDrawable\";\n\nconst { container, stage } = styles;\n\nconst Canvas = () => {\n  const [canvasContainer, setCanvasContainer] = useState({\n    width: 0,\n    height: 0,\n  });\n  const canvasRef = useRef(null);\n  const stageRef = useRef(null);\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      setCanvasContainer({\n        width: canvasRef.current.clientWidth,\n        height: canvasRef.current.clientHeight,\n      });\n    }\n\n    const canvasResize = () => {\n      setCanvasContainer({\n        width: canvasRef.current.clientWidth,\n        height: canvasRef.current.clientHeight,\n      });\n    };\n\n    window.addEventListener(\"resize\", canvasResize);\n    return () => window.removeEventListener(\"resize\", canvasResize);\n  }, []);\n\n  const dispatch = useDispatch();\n  const {\n    drawables,\n    drawableType,\n    fillColor,\n    layersHistory,\n    layersNow,\n    layersHistoryLimit,\n  } = useSelector((store) => store.canvas);\n\n  const [storedLayersHistory, setStoredLayersHistory] = useLocalStorage(\n    \"storedLayersHistory\",\n    []\n  );\n  const [storedLayersNow, setStoredLayersNow] = useLocalStorage(\n    \"storedLayersNow\",\n    -1\n  );\n\n  useEffect(() => {\n    if (storedLayersHistory[storedLayersNow] < 0)\n      setStoredLayersNow(storedLayersHistory.length - 1);\n\n    if (!layersHistory.length && storedLayersHistory.length) {\n      dispatch(canvas.actions.setLayersHitory(storedLayersHistory));\n      dispatch(canvas.actions.setLayersNow(storedLayersNow));\n      dispatch(\n        canvas.actions.setDrawables(\n          !storedLayersHistory[storedLayersNow]\n            ? []\n            : storedLayersHistory[storedLayersNow]\n        )\n      );\n    }\n  }, []);\n\n  const [drawablePoints, setDrawablePoints] = useState([]);\n  const [drawable, setDrawable] = useState({\n    type: drawableType,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    points: [],\n    fillColor,\n  });\n\n  const isDrawing = useRef(false);\n\n  const initializeDrawable = () => {\n    setDrawable({\n      type: drawableType,\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      points: [],\n      fillColor,\n    });\n    setDrawablePoints([]);\n    isDrawing.current = false;\n  };\n\n  const drawingDrawable = (e) => {\n    if (!isDrawing.current) {\n      return;\n    }\n\n    const width = drawablePoints[0] - drawablePoints[drawablePoints.length - 2];\n    const height =\n      drawablePoints[1] - drawablePoints[drawablePoints.length - 1];\n    const x =\n      width < 0 ? drawablePoints[0] : drawablePoints[drawablePoints.length - 2];\n    const y =\n      height < 0\n        ? drawablePoints[1]\n        : drawablePoints[drawablePoints.length - 1];\n\n    const newDrawable = {\n      type: drawableType,\n      x,\n      y,\n      width,\n      height,\n      points: [...drawablePoints],\n      fillColor,\n    };\n\n    const newDrawablePoints = [\n      ...drawablePoints.slice(\n        0,\n        drawablePoints.length > 2 ? drawablePoints.length - 2 : 2\n      ),\n      e.pageX,\n      e.pageY,\n    ];\n    setDrawablePoints(newDrawablePoints);\n    newDrawable.drawablePoints = newDrawablePoints;\n\n    setDrawable(newDrawable);\n  };\n\n  const selectDrawable = () => {\n    if (stageRef?.current) {\n      const pointerPosition = stageRef.current?.getPointerPosition();\n      const element = stageRef.current?.getIntersection(pointerPosition);\n\n      console.log(\"SELECT\", element);\n      isDrawing.current = false;\n    }\n  };\n\n  const finishDrawingDrawable = () => {\n    console.log(\"FINISH\");\n    if (!isDrawing.current) {\n      initializeDrawable();\n      return;\n    }\n\n    if (drawableType === toolEnum.select) {\n      selectDrawable();\n      return;\n    }\n\n    const newDrawables = [...drawables];\n    const newLayersHistory =\n      layersNow < layersHistoryLimit - 1\n        ? layersHistory.filter((_, index) => index <= layersNow)\n        : layersHistory.filter(\n            (_, index) =>\n              layersHistory.length - layersHistoryLimit + 1 <= index &&\n              index < layersHistoryLimit\n          );\n\n    const newDrawable = {\n      ...drawable,\n      points: drawablePoints.slice(0, drawablePoints.length - 2),\n    };\n    console.log(\"NEW\", newDrawable);\n    newDrawables.push(newDrawable);\n\n    dispatch(canvas.actions.setDrawables(newDrawables));\n\n    newLayersHistory.push(newDrawables);\n    setStoredLayersHistory(newLayersHistory);\n    dispatch(canvas.actions.setLayersHitory(newLayersHistory));\n\n    const nextIndex =\n      layersNow + 1 < layersHistoryLimit - 1\n        ? layersNow + 1\n        : layersHistoryLimit - 1;\n    setStoredLayersNow(nextIndex);\n    dispatch(canvas.actions.setLayersNow(nextIndex));\n\n    initializeDrawable();\n  };\n\n  const startDrawDrawable = (e) => {\n    console.log(\"START DRAW\", e);\n    if (isDrawing.current === false) {\n      isDrawing.current = true;\n      drawingDrawable(e);\n    } else {\n      if (drawableType === toolEnum.polygon) {\n        console.log(\"add polygon point\");\n      } else {\n        initializeDrawable();\n      }\n    }\n  };\n\n  const Drawables = () =>\n    drawables.map((drawable, index) => {\n      console.log(drawable);\n      switch (drawable.type) {\n        case toolEnum.ellipse:\n          return (\n            <EllipseDrawable\n              color={drawable.fillColor}\n              x={drawable.x}\n              y={drawable.y}\n              width={drawable.width}\n              height={drawable.height}\n              key={`${drawable.type}-${index}`}\n            ></EllipseDrawable>\n          );\n        case toolEnum.rect:\n          return (\n            <RectDrawable\n              color={drawable.fillColor}\n              x={drawable.x}\n              y={drawable.y}\n              width={drawable.width}\n              height={drawable.height}\n              key={`${drawable.type}-${index}`}\n            ></RectDrawable>\n          );\n        case toolEnum.polygon:\n          return (\n            <PolygonDrawable\n              color={drawable.fillColor}\n              points={drawable.points}\n              closed={true}\n              key={`${drawable.type}-${index}`}\n            ></PolygonDrawable>\n          );\n        default:\n          return null;\n      }\n    });\n\n  const DrawingDrawable = () => {\n    switch (drawable.type) {\n      case toolEnum.ellipse:\n        return (\n          <EllipseDrawable\n            color={drawable.fillColor}\n            x={drawable.x}\n            y={drawable.y}\n            width={drawable.width}\n            height={drawable.height}\n          ></EllipseDrawable>\n        );\n      case toolEnum.rect:\n        return (\n          <RectDrawable\n            color={drawable.fillColor}\n            x={drawable.x}\n            y={drawable.y}\n            width={drawable.width}\n            height={drawable.height}\n          ></RectDrawable>\n        );\n      case toolEnum.polygon:\n        return (\n          <PolygonDrawable\n            color={drawable.fillColor}\n            points={drawable.points}\n            closed={true}\n          ></PolygonDrawable>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div\n      className={classNames(container)}\n      ref={canvasRef}\n      onMouseMove={drawingDrawable}\n      onMouseDown={startDrawDrawable}\n      onMouseUp={finishDrawingDrawable}\n      onKeyDown={(e) => e.key === \"Escape\" && initializeDrawable()}\n      tabIndex=\"0\"\n    >\n      <Stage\n        ref={stageRef}\n        className={classNames(stage)}\n        width={canvasContainer.width}\n        height={canvasContainer.height}\n      >\n        <Layer>\n          <Drawables />\n\n          <DrawingDrawable />\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Canvas;\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Tool.module.scss\";\nimport { Button, CustomInput } from \"../../component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { canvas } from \"../../store/canvas/canvas\";\nimport { useLocalStorage } from \"../../hook\";\nimport * as Sentry from \"@sentry/react\";\nimport { toolEnum } from \"const\";\n\nconst {\n  container,\n  drawableButtonBox,\n  customInputBox,\n  controlButtonBox,\n  guideBox,\n} = styles;\n\nconst TOOL_TYPES = Object.values(toolEnum);\n\nconst Tool = () => {\n  const dispatch = useDispatch();\n  const {\n    drawables,\n    drawableType,\n    fillColor,\n    layersHistory,\n    layersNow,\n    layersHistoryLimit,\n  } = useSelector((store) => store.canvas);\n\n  const [storedLayersHistory, setStoredLayersHistory] = useLocalStorage(\n    \"storedLayersHistory\",\n    []\n  );\n  const [storedLayersNow, setStoredLayersNow] = useLocalStorage(\n    \"storedLayersNow\",\n    -1\n  );\n\n  const setDrawableButton = (type) => {\n    dispatch(canvas.actions.sedrawableType(type));\n  };\n\n  const onChangeColor = (e, target) => {\n    dispatch(canvas.actions.setColor({ target, value: e.target.value }));\n  };\n\n  const undo = () => {\n    const prevIndex =\n      layersNow >= 0\n        ? layersNow > layersHistory.length - 1\n          ? layersHistory.length - 1\n          : layersNow - 1\n        : -1;\n\n    setStoredLayersNow(prevIndex);\n    dispatch(canvas.actions.setLayersNow(prevIndex));\n    dispatch(\n      canvas.actions.setDrawables(\n        prevIndex > -1 ? layersHistory[prevIndex] : []\n      )\n    );\n  };\n\n  const redo = () => {\n    const nextIndex =\n      layersNow < layersHistory.length - 1\n        ? layersNow + 1\n        : layersHistory.length - 1;\n\n    setStoredLayersNow(nextIndex);\n    dispatch(canvas.actions.setLayersNow(nextIndex));\n    dispatch(\n      canvas.actions.setDrawables(\n        nextIndex > -1 ? layersHistory[nextIndex] : []\n      )\n    );\n  };\n\n  const clearDrawables = () => {\n    const newLayersHistory = layersHistory.filter(\n      (_, index) => index <= layersNow\n    );\n    newLayersHistory.push([]);\n\n    dispatch(canvas.actions.setDrawables([]));\n    dispatch(canvas.actions.setLayersHitory(newLayersHistory));\n    setStoredLayersHistory(newLayersHistory);\n\n    const nextIndex =\n      layersNow + 1 < layersHistoryLimit - 1\n        ? layersNow + 1\n        : layersHistoryLimit - 1;\n    dispatch(canvas.actions.setLayersNow(nextIndex));\n    setStoredLayersNow(nextIndex);\n  };\n\n  const resetLayers = () => {\n    if (window.confirm(\"초기화 하시겠습니까?\")) {\n      dispatch(canvas.actions.setDrawables([]));\n      dispatch(canvas.actions.setLayersHitory([]));\n      setStoredLayersHistory([]);\n      dispatch(canvas.actions.setLayersNow(-1));\n      setStoredLayersNow(-1);\n    }\n  };\n\n  const throwError = () => {\n    try {\n      throw new Error(\"Sentry: Button Error\");\n    } catch (e) {\n      console.error(e);\n      Sentry.captureException(e);\n    }\n  };\n\n  return (\n    <div className={classNames(container)}>\n      <Button onClick={throwError}>에러발생</Button>\n      <div className={classNames(drawableButtonBox)}>\n        <h3>드로잉 타입</h3>\n        <div>\n          {TOOL_TYPES.map((tooTypeValue) => (\n            <Button\n              onClick={() => setDrawableButton(tooTypeValue)}\n              isActive={drawableType === tooTypeValue}\n              key={`TOOL_TYPE_${tooTypeValue}`}\n            >\n              {tooTypeValue}\n            </Button>\n          ))}\n        </div>\n      </div>\n      <div className={classNames(customInputBox)}>\n        <h3>드로잉 옵션</h3>\n        <div>\n          <CustomInput\n            inputId=\"fillColor\"\n            onChange={(e) => onChangeColor(e, \"fillColor\")}\n            value={fillColor}\n            inputOption={{ type: \"color\" }}\n          >\n            채우기 색상\n          </CustomInput>\n        </div>\n      </div>\n      <div className={classNames(controlButtonBox)}>\n        <h3>편집</h3>\n        <div>\n          <Button onClick={undo} isActive={false} isDisable={layersNow < 0}>\n            undo\n          </Button>\n          <Button\n            onClick={redo}\n            isActive={false}\n            isDisable={layersNow >= layersHistory.length - 1}\n          >\n            redo\n          </Button>\n          <Button\n            onClick={() => drawables.length && clearDrawables()}\n            isActive={false}\n            isDisable={!drawables.length}\n          >\n            clear\n          </Button>\n          <Button onClick={resetLayers} isActive={false}>\n            reset\n          </Button>\n        </div>\n      </div>\n      <div className={classNames(guideBox)}>\n        <h3>사용 정보</h3>\n        <ul>\n          <li>\n            <span>esc:</span>\n            <span>진행 중인 작업 취소</span>\n          </li>\n          <li>\n            <span>더블클릭:</span>\n            <span>진행 중인 작업(곡선, 다각형)을 해당 위치에서 완료</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Tool;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.scss\";\n\nconst { button, active, disable } = styles;\n\nconst Button = ({ onClick, isActive, isDisable, style, children }) => {\n  return (\n    <button\n      onClick={onClick}\n      className={classNames(button, {\n        [active]: isActive,\n        [disable]: isDisable,\n      })}\n      disabled={isDisable}\n      style={style}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./CustomInput.module.scss\";\n\nconst { container } = styles;\n\nconst Input = ({ style, inputOption, inputId, onChange, value, children }) => {\n  return (\n    <div className={classNames(container)} style={style}>\n      <label htmlFor={inputId}>{children}</label>\n      <input id={inputId} onChange={onChange} value={value} {...inputOption} />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./App.module.scss\";\nimport { Canvas, Tool } from \"./component\";\n\nconst { container } = styles;\n\nfunction App() {\n  return (\n    <div className={classNames(container)}>\n      <Canvas></Canvas>\n      <Tool></Tool>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { canvas } from \"./canvas/canvas\";\n\nexport const store = configureStore({\n  reducer: {\n    canvas: canvas.reducer,\n  },\n});\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport * as Sentry from \"@sentry/react\";\n\nSentry.init({\n  dsn: \"https://2b40a7e129417643627963bd11e55402@o4507158840999936.ingest.us.sentry.io/4507158845325312\",\n  integrations: [\n    Sentry.browserTracingIntegration(),\n    Sentry.replayIntegration(),\n  ],\n  // Performance Monitoring\n  tracesSampleRate: 1.0, //  Capture 100% of the transactions\n  // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n  tracePropagationTargets: [\"localhost\", /^https:\\/\\/yourserver\\.io\\/api/],\n  // Session Replay\n  replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n  replaysOnErrorSampleRate: 1.0,\n});\n\nconst rootEl = document.getElementById(\"root\");\nconst root = createRoot(rootEl);\n\nconst render = () => {\n  // 동적으로 App component 가져오기\n  // react component tree에서 변경사항이 있을 때 이를 반영하기 위함\n  // eslint-disable-next-line global-require\n  const App = require(\"./App\").default;\n  root.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};\nrender();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { toolEnum } from \"../../const\";\n\nexport const canvas = createSlice({\n  name: \"canvas\",\n  initialState: {\n    drawableType: toolEnum.rect,\n    fillColor: \"#000000\",\n    drawables: [],\n    layersHistory: [],\n    layersNow: -1,\n    layersHistoryLimit: 40,\n  },\n  reducers: {\n    sedrawableType: (state, { payload }) => {\n      state.drawableType = payload;\n    },\n    setColor: (state, { payload }) => {\n      state[payload.target] = payload.value;\n    },\n    setDrawables: (state, { payload }) => {\n      state.drawables = payload;\n    },\n    setLayersHitory: (state, { payload }) => {\n      state.layersHistory = payload;\n    },\n    setLayersNow: (state, { payload }) => {\n      state.layersNow = payload;\n    },\n  },\n});\n","export enum toolEnum {\n  select = \"SELECT\",\n  rect = \"RECT\",\n  ellipse = \"ELLIPSE\",\n  polygon = \"POLYGON\",\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Canvas_container__1Vfbb\",\"stage\":\"Canvas_stage__35f8o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tool_container__1Szw6\",\"drawableButtonBox\":\"Tool_drawableButtonBox__3-exa\",\"customInputBox\":\"Tool_customInputBox__5O10G\",\"controlButtonBox\":\"Tool_controlButtonBox__1dCPk\",\"guideBox\":\"Tool_guideBox__1njCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__17x3e\",\"active\":\"Button_active__15qMB\",\"disable\":\"Button_disable__M3pI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CustomInput_container__1QDtG\"};"],"sourceRoot":""}